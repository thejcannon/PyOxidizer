on:
  push:
    branches-ignore:
      - "ci-test"
    tags-ignore:
      - "**"
  pull_request:
  schedule:
    - cron: "13 15 * * *"
  workflow_dispatch:
jobs:
  pyoxidizer-linux:
    runs-on: "ubuntu-22.04"
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/rust-bootstrap
        with:
          rust_toolchain: stable
          rust_targets: x86_64-unknown-linux-musl,aarch64-unknown-linux-musl

      - name: Build pyoxidizer Executable
        run: |
          sudo apt-get install musl-tools
          cargo build --bin pyoxidizer --target x86_64-unknown-linux-musl
          cargo build --bin pyoxidizer --target aarch64-unknown-linux-musl
          # The binary is a bit large so strip it.
          strip target/x86_64-unknown-linux-musl/debug/pyoxidizer
          strip target/aarch64-unknown-linux-musl/debug/pyoxidizer

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: pyoxidizer-exe-linux-x86_64
          path: target/x86_64-unknown-linux-musl/debug/pyoxidizer
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: pyoxidizer-exe-linux-aarch64
          path: target/aarch64-unknown-linux-musl/debug/pyoxidizer

  build-linux:
    needs:
      - pyoxidizer-linux
    strategy:
      fail-fast: false
      matrix:
        python_version:
          - "3.8"
          - "3.9"
          - "3.10"
        target_triple:
          - "x86_64-unknown-linux-gnu"
          - "aarch64-unknown-linux-gnu"
          # Not yet working due to rust config issues.
          # - 'x86_64-unknown-linux-musl'
    runs-on: "ubuntu-22.04"
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/rust-bootstrap
        with:
          rust_toolchain: stable
          rust_targets: ${{ matrix.target_triple }}

      - name: Download PyOxidizer Executable
        uses: actions/download-artifact@v3
        with:
          name: pyoxidizer-exe-linux
          path: /usr/local/bin/

      - name: Restore Docker Image Cache
        id: cache-image
        uses: actions/cache@v2
        with:
          path: ~/image.tar
          key: ${{ runner.os }}-${{ hashFiles('ci/linux-portable-binary.Dockerfile') }}

      - name: Build Docker Image
        if: steps.cache-image.outputs.cache-hit != 'true'
        run: |
          cd ci
          docker build -f linux-portable-binary.Dockerfile -t pyoxidizer:build .
          docker save -o ~/image.tar pyoxidizer:build

      - name: Load Docker Image
        if: steps.cache-image.outputs.cache-hit == 'true'
        run: |
          docker load -i ~/image.tar

      - name: Build pyoxy Linux Executable
        run: |
          chmod +x /usr/local/bin/pyoxidizer
          just actions-build-pyoxy-linux ${{ matrix.target_triple }} ${{ matrix.python_version }}

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: exe-pyoxy-${{ matrix.target_triple }}-${{ matrix.python_version }}
          path: upload/*
